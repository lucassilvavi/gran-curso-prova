version: '2.1'
services:
  database-service:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    container_name: questoes-database
    environment:
      MYSQL_PASSWORD: "senhaperguntas"
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "pergunta"
      MYSQL_USER: "perguntas"
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - ./database/docker-data/mysql:/var/lib/mysql
      - ./database:/docker-entrypoint-initdb.d
    networks:
      - questoes_network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 5s
      retries: 20

  api-service:
    container_name: questoes-api
    build: ./api
    image: php-fpm
    working_dir: /application
    volumes:
      - ./api:/application
    environment:
      - APP_ENV=local
    depends_on:
      database-service:
        condition: service_healthy
    links:
      - database-service
    restart: on-failure
    networks:
      - questoes_network

  webserver-service:
    env_file: ./api/.env
    build:
      context: ./api
      dockerfile: WebserverDockerfile
      args:
        EXPOSE_PORT: 80
    image: nginx
    container_name: questoes-webserver
    working_dir: /application
    volumes:
      - ./api:/application
      - ./api/docker/webserver/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "86:80"
    depends_on:
      - api-service
    networks:
      - questoes_network

  frontend-service-gran:
    image: node:10
    container_name: gran-web
    user: "node"
    working_dir: /home/node/app
    volumes:
      - ./frontend:/home/node/app
    command:
      sh -c 'npm i && npm run serve'
    ports:
      - "8083:8080"
    environment:
      - NODE_ENV=development
    networks:
      - questoes_network

networks:
  questoes_network:
    name: questoes_network
    driver: bridge
